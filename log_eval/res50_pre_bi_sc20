Arguments:
data_path                     ./data
checkpoint_path               ./checkpoints
log_step                      10
num_workers                   4
disable_cuda                  False
cuda_device                   0
torch_seed                    551640160567290729
model                         gve
dataset                       iu
pretrained_model              resnet50
layers_to_truncate            1
sc_ckpt                       ./data/iu/sentence_classifier_ckpt.pth
weights_ckpt                  None
loss_lambda                   0.2
embedding_size                1000
hidden_size                   1000
num_epochs                    30
batch_size                    128
learning_rate                 0.001
train                         True
eval_ckpt                     None

Preparing Data ...
loading annotations into memory...
Done (t=0.03s)
creating index...
index created!
loading annotations into memory...
Done (t=0.00s)
creating index...
index created!

Loading Model ...
embed_size: 1000
GVE(
  (vision_model): PretrainedModel(
    (pretrained_model): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer4): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=2048, out_features=1000, bias=True)
      (classifier): Sequential(
        (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        (4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
            (downsample): Sequential(
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
        )
        (5): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
            (downsample): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
        )
        (6): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
            (downsample): Sequential(
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
        )
        (7): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
            (downsample): Sequential(
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace)
          )
        )
        (8): AdaptiveAvgPool2d(output_size=(1, 1))
      )
    )
  )
  (word_embed): Embedding(978, 1000, padding_idx=0)
  (linear1): Linear(in_features=1000, out_features=1000, bias=True)
  (lstm1): LSTM(1000, 1000, batch_first=True)
  (lstm2): LSTM(2017, 1000, batch_first=True)
  (linear2): Linear(in_features=1000, out_features=978, bias=True)
  (sentence_classifier): SentenceClassifier(
    (word_embed): Embedding(978, 1000, padding_idx=0)
    (lstm): LSTM(1000, 2000, batch_first=True, bidirectional=True)
    (linear): Linear(in_features=4000, out_features=17, bias=True)
  )
) 

Training ...
Epoch [0/30], Step [0/23], Loss: 9.4522, Perplexity: 12736.0074
Epoch [0/30], Step [10/23], Loss: 5.6489, Perplexity: 283.9857
Epoch [0/30], Step [20/23], Loss: 5.4682, Perplexity: 237.0321
Epoch [0/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 15596, 'reflen': 10832, 'guess': [15596, 15231, 14866, 14501], 'correct': [1496, 299, 1, 0]}
ratio: 1.439807976366189
Bleu_1: 0.096
Bleu_2: 0.043
Bleu_3: 0.005
Bleu_4: 0.000
computing METEOR score...
METEOR: 0.041
computing Rouge score...
ROUGE_L: 0.105
computing CIDEr score...
CIDEr: 0.011
dict_items([('Bleu_1', 0.09592203129006822), ('Bleu_2', 0.043394088323562736), ('Bleu_3', 0.005022142170918409), ('Bleu_4', 3.057153632372408e-07), ('METEOR', 0.04100078132793868), ('ROUGE_L', 0.1045167635542355), ('CIDEr', 0.01073328146225995)])
Epoch [1/30], Step [0/23], Loss: 4.8544, Perplexity: 128.2993
Epoch [1/30], Step [10/23], Loss: 5.0520, Perplexity: 156.3304
Epoch [1/30], Step [20/23], Loss: 4.8537, Perplexity: 128.2090
Epoch [1/30], Step [0/3]
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 5456, 'reflen': 10832, 'guess': [5456, 5091, 4726, 4361], 'correct': [2413, 585, 188, 0]}
ratio: 0.5036927621860687
Bleu_1: 0.165
Bleu_2: 0.084
Bleu_3: 0.047
Bleu_4: 0.000
computing METEOR score...
METEOR: 0.081
computing Rouge score...
ROUGE_L: 0.251
computing CIDEr score...
CIDEr: 0.052
dict_items([('Bleu_1', 0.16510355806809923), ('Bleu_2', 0.08415721151452914), ('Bleu_3', 0.047203415727669604), ('Bleu_4', 1.7322154826244352e-06), ('METEOR', 0.08118548359977246), ('ROUGE_L', 0.251068311884392), ('CIDEr', 0.05150799429183321)])
Epoch [2/30], Step [0/23], Loss: 4.9138, Perplexity: 136.1555
Epoch [2/30], Step [10/23], Loss: 4.2398, Perplexity: 69.3927
Epoch [2/30], Step [20/23], Loss: 4.2630, Perplexity: 71.0192
Epoch [2/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 9171, 'reflen': 10832, 'guess': [9171, 8806, 8441, 8076], 'correct': [4062, 1873, 840, 290]}
ratio: 0.8466580502214875
Bleu_1: 0.370
Bleu_2: 0.256
Bleu_3: 0.176
Bleu_4: 0.113
computing METEOR score...
METEOR: 0.167
computing Rouge score...
ROUGE_L: 0.344
computing CIDEr score...
CIDEr: 0.189
dict_items([('Bleu_1', 0.36954407950180657), ('Bleu_2', 0.2560850255894002), ('Bleu_3', 0.17592690364049826), ('Bleu_4', 0.11301481332222062), ('METEOR', 0.1673015523530873), ('ROUGE_L', 0.34380582078686506), ('CIDEr', 0.18935389826101606)])
Epoch [3/30], Step [0/23], Loss: 4.0265, Perplexity: 56.0634
Epoch [3/30], Step [10/23], Loss: 3.7366, Perplexity: 41.9568
Epoch [3/30], Step [20/23], Loss: 2.7535, Perplexity: 15.6974
Epoch [3/30], Step [0/3]
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 8044, 'reflen': 10832, 'guess': [8044, 7679, 7314, 6949], 'correct': [4176, 1931, 923, 396]}
ratio: 0.742614475627701
Bleu_1: 0.367
Bleu_2: 0.255
Bleu_3: 0.180
Bleu_4: 0.124
computing METEOR score...
METEOR: 0.189
computing Rouge score...
ROUGE_L: 0.370
computing CIDEr score...
CIDEr: 0.279
dict_items([('Bleu_1', 0.3670833460377475), ('Bleu_2', 0.25548139025235955), ('Bleu_3', 0.17992044369361201), ('Bleu_4', 0.12377207364075095), ('METEOR', 0.18923088069493246), ('ROUGE_L', 0.37033047857929147), ('CIDEr', 0.27860721735095373)])
Epoch [4/30], Step [0/23], Loss: 2.7797, Perplexity: 16.1143
Epoch [4/30], Step [10/23], Loss: 2.3896, Perplexity: 10.9086
Epoch [4/30], Step [20/23], Loss: 1.9682, Perplexity: 7.1576
Epoch [4/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 12401, 'reflen': 10832, 'guess': [12401, 12036, 11671, 11306], 'correct': [5095, 2376, 1394, 891]}
ratio: 1.1448485967502635
Bleu_1: 0.411
Bleu_2: 0.285
Bleu_3: 0.213
Bleu_4: 0.166
computing METEOR score...
METEOR: 0.204
computing Rouge score...
ROUGE_L: 0.346
computing CIDEr score...
CIDEr: 0.710
dict_items([('Bleu_1', 0.41085396339001606), ('Bleu_2', 0.2847907432640145), ('Bleu_3', 0.2131746118695462), ('Bleu_4', 0.1662240239215406), ('METEOR', 0.20435413066912325), ('ROUGE_L', 0.34556381915470274), ('CIDEr', 0.7100081297386268)])
Epoch [5/30], Step [0/23], Loss: 2.2209, Perplexity: 9.2157
Epoch [5/30], Step [10/23], Loss: 1.6942, Perplexity: 5.4423
Epoch [5/30], Step [20/23], Loss: 1.7650, Perplexity: 5.8416
Epoch [5/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 12410, 'reflen': 10832, 'guess': [12410, 12045, 11680, 11315], 'correct': [5093, 2370, 1389, 887]}
ratio: 1.1456794682421394
Bleu_1: 0.410
Bleu_2: 0.284
Bleu_3: 0.213
Bleu_4: 0.166
computing METEOR score...
METEOR: 0.204
computing Rouge score...
ROUGE_L: 0.345
computing CIDEr score...
CIDEr: 0.706
dict_items([('Bleu_1', 0.4103948428686212), ('Bleu_2', 0.2841657409598994), ('Bleu_3', 0.21255318307840698), ('Bleu_4', 0.1656410501443222), ('METEOR', 0.2041329546838664), ('ROUGE_L', 0.3450181275917098), ('CIDEr', 0.705841836402278)])
Epoch [6/30], Step [0/23], Loss: 1.9755, Perplexity: 7.2102
Epoch [6/30], Step [10/23], Loss: 1.6058, Perplexity: 4.9821
Epoch [6/30], Step [20/23], Loss: 1.9275, Perplexity: 6.8725
Epoch [6/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 12410, 'reflen': 10832, 'guess': [12410, 12045, 11680, 11315], 'correct': [5093, 2370, 1389, 887]}
ratio: 1.1456794682421394
Bleu_1: 0.410
Bleu_2: 0.284
Bleu_3: 0.213
Bleu_4: 0.166
computing METEOR score...
METEOR: 0.204
computing Rouge score...
ROUGE_L: 0.345
computing CIDEr score...
CIDEr: 0.706
dict_items([('Bleu_1', 0.4103948428686212), ('Bleu_2', 0.2841657409598994), ('Bleu_3', 0.21255318307840698), ('Bleu_4', 0.1656410501443222), ('METEOR', 0.2041329546838664), ('ROUGE_L', 0.3450181275917098), ('CIDEr', 0.705841836402278)])
Epoch [7/30], Step [0/23], Loss: 1.6110, Perplexity: 5.0077
Epoch [7/30], Step [10/23], Loss: 1.7378, Perplexity: 5.6850
Epoch [7/30], Step [20/23], Loss: 1.3529, Perplexity: 3.8688
Epoch [7/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 12410, 'reflen': 10832, 'guess': [12410, 12045, 11680, 11315], 'correct': [5093, 2370, 1389, 887]}
ratio: 1.1456794682421394
Bleu_1: 0.410
Bleu_2: 0.284
Bleu_3: 0.213
Bleu_4: 0.166
computing METEOR score...
METEOR: 0.204
computing Rouge score...
ROUGE_L: 0.345
computing CIDEr score...
CIDEr: 0.706
dict_items([('Bleu_1', 0.4103948428686212), ('Bleu_2', 0.2841657409598994), ('Bleu_3', 0.21255318307840698), ('Bleu_4', 0.1656410501443222), ('METEOR', 0.2041329546838664), ('ROUGE_L', 0.3450181275917098), ('CIDEr', 0.705841836402278)])
Epoch [8/30], Step [0/23], Loss: 1.2830, Perplexity: 3.6073
Epoch [8/30], Step [10/23], Loss: 1.3217, Perplexity: 3.7497
Epoch [8/30], Step [20/23], Loss: 1.7866, Perplexity: 5.9692
Epoch [8/30], Step [0/3]
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 12123, 'reflen': 10832, 'guess': [12123, 11758, 11393, 11028], 'correct': [5029, 2309, 1331, 839]}
ratio: 1.1191838995567651
Bleu_1: 0.415
Bleu_2: 0.285
Bleu_3: 0.212
Bleu_4: 0.164
computing METEOR score...
METEOR: 0.203
computing Rouge score...
ROUGE_L: 0.343
computing CIDEr score...
CIDEr: 0.675
dict_items([('Bleu_1', 0.4148313123813895), ('Bleu_2', 0.28541776680235265), ('Bleu_3', 0.21191774395191015), ('Bleu_4', 0.16403699024920732), ('METEOR', 0.2028001633730594), ('ROUGE_L', 0.3431996934155624), ('CIDEr', 0.6749256238413375)])
Epoch [9/30], Step [0/23], Loss: 1.3299, Perplexity: 3.7808
Epoch [9/30], Step [10/23], Loss: 1.6565, Perplexity: 5.2412
Epoch [9/30], Step [20/23], Loss: 2.4212, Perplexity: 11.2596
Epoch [9/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 8395, 'reflen': 10832, 'guess': [8395, 8030, 7665, 7300], 'correct': [3879, 1334, 543, 333]}
ratio: 0.775018463810859
Bleu_1: 0.346
Bleu_2: 0.207
Bleu_3: 0.132
Bleu_4: 0.094
computing METEOR score...
METEOR: 0.151
computing Rouge score...
ROUGE_L: 0.311
computing CIDEr score...
CIDEr: 0.248
dict_items([('Bleu_1', 0.3456423384546334), ('Bleu_2', 0.20725143071735677), ('Bleu_3', 0.13154374448293316), ('Bleu_4', 0.09387824397709679), ('METEOR', 0.15142433964442198), ('ROUGE_L', 0.310567795429475), ('CIDEr', 0.24779927919193565)])
Epoch [10/30], Step [0/23], Loss: 1.9436, Perplexity: 6.9840
Epoch [10/30], Step [10/23], Loss: 1.8048, Perplexity: 6.0787
Epoch [10/30], Step [20/23], Loss: 1.8916, Perplexity: 6.6297
Epoch [10/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 9490, 'reflen': 10832, 'guess': [9490, 9125, 8760, 8395], 'correct': [4163, 1362, 505, 257]}
ratio: 0.8761078286557537
Bleu_1: 0.381
Bleu_2: 0.222
Bleu_3: 0.135
Bleu_4: 0.090
computing METEOR score...
METEOR: 0.164
computing Rouge score...
ROUGE_L: 0.298
computing CIDEr score...
CIDEr: 0.247
dict_items([('Bleu_1', 0.3808252551167614), ('Bleu_2', 0.22214050748450653), ('Bleu_3', 0.13516869208872787), ('Bleu_4', 0.09000809605774336), ('METEOR', 0.16402150204509386), ('ROUGE_L', 0.29813000258752376), ('CIDEr', 0.24661105831834906)])
Epoch [11/30], Step [0/23], Loss: 1.5841, Perplexity: 4.8751
Epoch [11/30], Step [10/23], Loss: 1.5294, Perplexity: 4.6155
Epoch [11/30], Step [20/23], Loss: 1.7689, Perplexity: 5.8647
Epoch [11/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 11467, 'reflen': 10832, 'guess': [11467, 11102, 10737, 10372], 'correct': [4282, 1662, 627, 332]}
ratio: 1.0586225997044814
Bleu_1: 0.373
Bleu_2: 0.236
Bleu_3: 0.148
Bleu_4: 0.101
computing METEOR score...
METEOR: 0.163
computing Rouge score...
ROUGE_L: 0.300
computing CIDEr score...
CIDEr: 0.223
dict_items([('Bleu_1', 0.3734193773436493), ('Bleu_2', 0.23643584759778294), ('Bleu_3', 0.14834414559210685), ('Bleu_4', 0.1011047832692981), ('METEOR', 0.16264824351674032), ('ROUGE_L', 0.2997109319750782), ('CIDEr', 0.2233029600831845)])
Epoch [12/30], Step [0/23], Loss: 1.6540, Perplexity: 5.2277
Epoch [12/30], Step [10/23], Loss: 1.1195, Perplexity: 3.0633
Epoch [12/30], Step [20/23], Loss: 1.0464, Perplexity: 2.8474
Epoch [12/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 18250, 'reflen': 10832, 'guess': [18250, 17885, 17520, 17155], 'correct': [3429, 1063, 418, 248]}
ratio: 1.684822747414911
Bleu_1: 0.188
Bleu_2: 0.106
Bleu_3: 0.064
Bleu_4: 0.044
computing METEOR score...
METEOR: 0.105
computing Rouge score...
ROUGE_L: 0.194
computing CIDEr score...
CIDEr: 0.002
dict_items([('Bleu_1', 0.1878904109588938), ('Bleu_2', 0.10567553815973903), ('Bleu_3', 0.0643473064287672), ('Bleu_4', 0.04430094788319632), ('METEOR', 0.10516987747939921), ('ROUGE_L', 0.19429402641272764), ('CIDEr', 0.0022036067128348327)])
Epoch [13/30], Step [0/23], Loss: 1.1081, Perplexity: 3.0286
Epoch [13/30], Step [10/23], Loss: 1.1740, Perplexity: 3.2348
Epoch [13/30], Step [20/23], Loss: 1.2391, Perplexity: 3.4526
Epoch [13/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 12250, 'reflen': 10832, 'guess': [12250, 11885, 11520, 11155], 'correct': [5049, 2341, 1375, 885]}
ratio: 1.13090841949768
Bleu_1: 0.412
Bleu_2: 0.285
Bleu_3: 0.213
Bleu_4: 0.167
computing METEOR score...
METEOR: 0.203
computing Rouge score...
ROUGE_L: 0.344
computing CIDEr score...
CIDEr: 0.706
dict_items([('Bleu_1', 0.41216326530608877), ('Bleu_2', 0.284928410154269), ('Bleu_3', 0.21319347550502482), ('Bleu_4', 0.1665132725279032), ('METEOR', 0.20321565756978122), ('ROUGE_L', 0.34427102956185823), ('CIDEr', 0.7057282545571544)])
Epoch [14/30], Step [0/23], Loss: 1.2355, Perplexity: 3.4402
Epoch [14/30], Step [10/23], Loss: 1.1635, Perplexity: 3.2010
Epoch [14/30], Step [20/23], Loss: 1.3453, Perplexity: 3.8392
Epoch [14/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 9820, 'reflen': 10832, 'guess': [9820, 9455, 9090, 8725], 'correct': [4067, 1401, 525, 286]}
ratio: 0.9065731166912013
Bleu_1: 0.374
Bleu_2: 0.223
Bleu_3: 0.138
Bleu_4: 0.094
computing METEOR score...
METEOR: 0.157
computing Rouge score...
ROUGE_L: 0.304
computing CIDEr score...
CIDEr: 0.252
dict_items([('Bleu_1', 0.37359965904131043), ('Bleu_2', 0.22346701607205618), ('Bleu_3', 0.13753778383784618), ('Bleu_4', 0.09365427639246884), ('METEOR', 0.15723820891560725), ('ROUGE_L', 0.30396256042109), ('CIDEr', 0.25244249836125415)])
Epoch [15/30], Step [0/23], Loss: 1.0157, Perplexity: 2.7613
Epoch [15/30], Step [10/23], Loss: 1.0897, Perplexity: 2.9733
Epoch [15/30], Step [20/23], Loss: 1.0534, Perplexity: 2.8675
Epoch [15/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 8406, 'reflen': 10832, 'guess': [8406, 8041, 7676, 7311], 'correct': [3875, 1332, 543, 334]}
ratio: 0.7760339734120406
Bleu_1: 0.345
Bleu_2: 0.207
Bleu_3: 0.131
Bleu_4: 0.094
computing METEOR score...
METEOR: 0.151
computing Rouge score...
ROUGE_L: 0.310
computing CIDEr score...
CIDEr: 0.249
dict_items([('Bleu_1', 0.3454168079019578), ('Bleu_2', 0.20706151495839134), ('Bleu_3', 0.13147452013829128), ('Bleu_4', 0.09391585201421629), ('METEOR', 0.15123776543092474), ('ROUGE_L', 0.30995573798497694), ('CIDEr', 0.24876168492444836)])
Epoch [16/30], Step [0/23], Loss: 0.8299, Perplexity: 2.2932
Epoch [16/30], Step [10/23], Loss: 0.7351, Perplexity: 2.0857
Epoch [16/30], Step [20/23], Loss: 0.9198, Perplexity: 2.5088
Epoch [16/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 8760, 'reflen': 10832, 'guess': [8760, 8395, 8030, 7665], 'correct': [3909, 1299, 458, 277]}
ratio: 0.8087149187591572
Bleu_1: 0.352
Bleu_2: 0.207
Bleu_3: 0.125
Bleu_4: 0.086
computing METEOR score...
METEOR: 0.152
computing Rouge score...
ROUGE_L: 0.308
computing CIDEr score...
CIDEr: 0.248
dict_items([('Bleu_1', 0.3522394783440881), ('Bleu_2', 0.2074204023880881), ('Bleu_3', 0.12465502233842583), ('Bleu_4', 0.08621708879348892), ('METEOR', 0.15156215987711072), ('ROUGE_L', 0.3080655190539328), ('CIDEr', 0.2483079746134045)])
Epoch [17/30], Step [0/23], Loss: 0.7395, Perplexity: 2.0948
Epoch [17/30], Step [10/23], Loss: 0.6754, Perplexity: 1.9649
Epoch [17/30], Step [20/23], Loss: 0.8430, Perplexity: 2.3233
Epoch [17/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 9356, 'reflen': 10832, 'guess': [9356, 8991, 8626, 8261], 'correct': [4004, 1377, 507, 291]}
ratio: 0.8637370753322688
Bleu_1: 0.366
Bleu_2: 0.219
Bleu_3: 0.134
Bleu_4: 0.092
computing METEOR score...
METEOR: 0.157
computing Rouge score...
ROUGE_L: 0.309
computing CIDEr score...
CIDEr: 0.269
dict_items([('Bleu_1', 0.3655019320908619), ('Bleu_2', 0.21865062369600424), ('Bleu_3', 0.13388397230701515), ('Bleu_4', 0.09217921153506699), ('METEOR', 0.1570362968887149), ('ROUGE_L', 0.3087201070134942), ('CIDEr', 0.26909253897723945)])
Epoch [18/30], Step [0/23], Loss: 0.7508, Perplexity: 2.1187
Epoch [18/30], Step [10/23], Loss: 0.7617, Perplexity: 2.1419
Epoch [18/30], Step [20/23], Loss: 1.1403, Perplexity: 3.1277
Epoch [18/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 10220, 'reflen': 10832, 'guess': [10220, 9855, 9490, 9125], 'correct': [3956, 1299, 458, 277]}
ratio: 0.9435007385523501
Bleu_1: 0.365
Bleu_2: 0.213
Bleu_3: 0.127
Bleu_4: 0.088
computing METEOR score...
METEOR: 0.151
computing Rouge score...
ROUGE_L: 0.290
computing CIDEr score...
CIDEr: 0.173
dict_items([('Bleu_1', 0.3645849286779778), ('Bleu_2', 0.21275132786040774), ('Bleu_3', 0.1271878764375367), ('Bleu_4', 0.08757786272527554), ('METEOR', 0.15093050867805438), ('ROUGE_L', 0.28984370212314187), ('CIDEr', 0.17294908053007957)])
Epoch [19/30], Step [0/23], Loss: 0.9231, Perplexity: 2.5172
Epoch [19/30], Step [10/23], Loss: 1.1223, Perplexity: 3.0720
Epoch [19/30], Step [20/23], Loss: 0.6636, Perplexity: 1.9418
Epoch [19/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 9562, 'reflen': 10832, 'guess': [9562, 9197, 8832, 8467], 'correct': [3971, 1325, 469, 278]}
ratio: 0.8827548005907604
Bleu_1: 0.364
Bleu_2: 0.214
Bleu_3: 0.129
Bleu_4: 0.088
computing METEOR score...
METEOR: 0.154
computing Rouge score...
ROUGE_L: 0.300
computing CIDEr score...
CIDEr: 0.222
dict_items([('Bleu_1', 0.36363801869698964), ('Bleu_2', 0.2141798227711568), ('Bleu_3', 0.12872503217653658), ('Bleu_4', 0.08849232376425675), ('METEOR', 0.15423259380231877), ('ROUGE_L', 0.30025263378208294), ('CIDEr', 0.2222580776406048)])
Epoch [20/30], Step [0/23], Loss: 0.6677, Perplexity: 1.9498
Epoch [20/30], Step [10/23], Loss: 1.8486, Perplexity: 6.3512
Epoch [20/30], Step [20/23], Loss: 1.4851, Perplexity: 4.4153
Epoch [20/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 13140, 'reflen': 10832, 'guess': [13140, 12775, 12410, 12045], 'correct': [4472, 1377, 497, 226]}
ratio: 1.2130723781387358
Bleu_1: 0.340
Bleu_2: 0.192
Bleu_3: 0.114
Bleu_4: 0.072
computing METEOR score...
METEOR: 0.166
computing Rouge score...
ROUGE_L: 0.295
computing CIDEr score...
CIDEr: 0.179
dict_items([('Bleu_1', 0.34033485540332264), ('Bleu_2', 0.19153128859787863), ('Bleu_3', 0.11368103600582803), ('Bleu_4', 0.07245884812403644), ('METEOR', 0.16632915953522565), ('ROUGE_L', 0.29546635055662274), ('CIDEr', 0.179016169121051)])
Epoch [21/30], Step [0/23], Loss: 1.5308, Perplexity: 4.6220
Epoch [21/30], Step [10/23], Loss: 0.7204, Perplexity: 2.0552
Epoch [21/30], Step [20/23], Loss: 0.9610, Perplexity: 2.6143
Epoch [21/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 10671, 'reflen': 10832, 'guess': [10671, 10306, 9941, 9576], 'correct': [3725, 1074, 325, 228]}
ratio: 0.9851366322007953
Bleu_1: 0.344
Bleu_2: 0.188
Bleu_3: 0.104
Bleu_4: 0.072
computing METEOR score...
METEOR: 0.134
computing Rouge score...
ROUGE_L: 0.261
computing CIDEr score...
CIDEr: 0.161
dict_items([('Bleu_1', 0.3438497293073197), ('Bleu_2', 0.18787335017232937), ('Bleu_3', 0.10436232011115675), ('Bleu_4', 0.07185505959330056), ('METEOR', 0.13436597821105994), ('ROUGE_L', 0.26115717931798627), ('CIDEr', 0.1613084746483954)])
Epoch [22/30], Step [0/23], Loss: 0.7763, Perplexity: 2.1734
Epoch [22/30], Step [10/23], Loss: 0.6938, Perplexity: 2.0013
Epoch [22/30], Step [20/23], Loss: 0.7492, Perplexity: 2.1153
Epoch [22/30], Step [0/3]
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 17690, 'reflen': 10832, 'guess': [17690, 17325, 16960, 16595], 'correct': [4359, 1400, 551, 301]}
ratio: 1.6331240768093027
Bleu_1: 0.246
Bleu_2: 0.141
Bleu_3: 0.086
Bleu_4: 0.059
computing METEOR score...
METEOR: 0.142
computing Rouge score...
ROUGE_L: 0.225
computing CIDEr score...
CIDEr: 0.036
dict_items([('Bleu_1', 0.24641040135668477), ('Bleu_2', 0.14110971484905444), ('Bleu_3', 0.0864861424137233), ('Bleu_4', 0.05852712682912684), ('METEOR', 0.1415052434009531), ('ROUGE_L', 0.22540318990972236), ('CIDEr', 0.03590699803320398)])
Epoch [23/30], Step [0/23], Loss: 3.9911, Perplexity: 54.1130
Epoch [23/30], Step [10/23], Loss: 0.6912, Perplexity: 1.9960
Epoch [23/30], Step [20/23], Loss: 0.7004, Perplexity: 2.0145
Epoch [23/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 18250, 'reflen': 10832, 'guess': [18250, 17885, 17520, 17155], 'correct': [3444, 969, 256, 196]}
ratio: 1.684822747414911
Bleu_1: 0.189
Bleu_2: 0.101
Bleu_3: 0.053
Bleu_4: 0.036
computing METEOR score...
METEOR: 0.114
computing Rouge score...
ROUGE_L: 0.189
computing CIDEr score...
CIDEr: 0.004
dict_items([('Bleu_1', 0.18871232876711294), ('Bleu_2', 0.10111545798887989), ('Bleu_3', 0.05306159779403669), ('Bleu_4', 0.0361452788668086), ('METEOR', 0.11401396620518776), ('ROUGE_L', 0.1894621303159365), ('CIDEr', 0.003925376743373689)])
Epoch [24/30], Step [0/23], Loss: 0.6588, Perplexity: 1.9325
Epoch [24/30], Step [10/23], Loss: 0.6448, Perplexity: 1.9057
Epoch [24/30], Step [20/23], Loss: 0.8607, Perplexity: 2.3649
Epoch [24/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 18090, 'reflen': 10832, 'guess': [18090, 17725, 17360, 16995], 'correct': [3513, 1006, 278, 202]}
ratio: 1.6700516986704514
Bleu_1: 0.194
Bleu_2: 0.105
Bleu_3: 0.056
Bleu_4: 0.038
computing METEOR score...
METEOR: 0.117
computing Rouge score...
ROUGE_L: 0.194
computing CIDEr score...
CIDEr: 0.014
dict_items([('Bleu_1', 0.19419568822552824), ('Bleu_2', 0.10498461499345578), ('Bleu_3', 0.05609387791615427), ('Bleu_4', 0.038057841129990604), ('METEOR', 0.11670089068511984), ('ROUGE_L', 0.19360442662450503), ('CIDEr', 0.013839988771837779)])
Epoch [25/30], Step [0/23], Loss: 0.5530, Perplexity: 1.7384
Epoch [25/30], Step [10/23], Loss: 0.5798, Perplexity: 1.7858
Epoch [25/30], Step [20/23], Loss: 0.5193, Perplexity: 1.6809
Epoch [25/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 18106, 'reflen': 10832, 'guess': [18106, 17741, 17376, 17011], 'correct': [3513, 1009, 280, 205]}
ratio: 1.6715288035448974
Bleu_1: 0.194
Bleu_2: 0.105
Bleu_3: 0.056
Bleu_4: 0.038
computing METEOR score...
METEOR: 0.117
computing Rouge score...
ROUGE_L: 0.194
computing CIDEr score...
CIDEr: 0.013
dict_items([('Bleu_1', 0.1940240804153212), ('Bleu_2', 0.10504716883064043), ('Bleu_3', 0.05623313669046769), ('Bleu_4', 0.038260464300999344), ('METEOR', 0.1166760859005659), ('ROUGE_L', 0.19371929015939357), ('CIDEr', 0.012770833154016033)])
Epoch [26/30], Step [0/23], Loss: 0.5062, Perplexity: 1.6589
Epoch [26/30], Step [10/23], Loss: 0.5054, Perplexity: 1.6577
Epoch [26/30], Step [20/23], Loss: 0.4404, Perplexity: 1.5534
Epoch [26/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 18106, 'reflen': 10832, 'guess': [18106, 17741, 17376, 17011], 'correct': [3513, 1009, 280, 205]}
ratio: 1.6715288035448974
Bleu_1: 0.194
Bleu_2: 0.105
Bleu_3: 0.056
Bleu_4: 0.038
computing METEOR score...
METEOR: 0.117
computing Rouge score...
ROUGE_L: 0.194
computing CIDEr score...
CIDEr: 0.013
dict_items([('Bleu_1', 0.1940240804153212), ('Bleu_2', 0.10504716883064043), ('Bleu_3', 0.05623313669046769), ('Bleu_4', 0.038260464300999344), ('METEOR', 0.1166760859005659), ('ROUGE_L', 0.19371929015939357), ('CIDEr', 0.012770833154016033)])
Epoch [27/30], Step [0/23], Loss: 0.4753, Perplexity: 1.6085
Epoch [27/30], Step [10/23], Loss: 0.5064, Perplexity: 1.6592
Epoch [27/30], Step [20/23], Loss: 0.4427, Perplexity: 1.5570
Epoch [27/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 17514, 'reflen': 10832, 'guess': [17514, 17149, 16784, 16419], 'correct': [3598, 1088, 350, 243]}
ratio: 1.6168759231903973
Bleu_1: 0.205
Bleu_2: 0.114
Bleu_3: 0.065
Bleu_4: 0.045
computing METEOR score...
METEOR: 0.122
computing Rouge score...
ROUGE_L: 0.204
computing CIDEr score...
CIDEr: 0.036
dict_items([('Bleu_1', 0.20543565147880521), ('Bleu_2', 0.11416499298897224), ('Bleu_3', 0.06477580626888158), ('Bleu_4', 0.044784168300826016), ('METEOR', 0.12194788974780937), ('ROUGE_L', 0.20355741247770323), ('CIDEr', 0.03631069805896473)])
Epoch [28/30], Step [0/23], Loss: 0.4142, Perplexity: 1.5131
Epoch [28/30], Step [10/23], Loss: 0.4550, Perplexity: 1.5761
Epoch [28/30], Step [20/23], Loss: 0.4808, Perplexity: 1.6173
Epoch [28/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 18106, 'reflen': 10832, 'guess': [18106, 17741, 17376, 17011], 'correct': [3513, 1009, 280, 205]}
ratio: 1.6715288035448974
Bleu_1: 0.194
Bleu_2: 0.105
Bleu_3: 0.056
Bleu_4: 0.038
computing METEOR score...
METEOR: 0.117
computing Rouge score...
ROUGE_L: 0.194
computing CIDEr score...
CIDEr: 0.013
dict_items([('Bleu_1', 0.1940240804153212), ('Bleu_2', 0.10504716883064043), ('Bleu_3', 0.05623313669046769), ('Bleu_4', 0.038260464300999344), ('METEOR', 0.1166760859005659), ('ROUGE_L', 0.19371929015939357), ('CIDEr', 0.012770833154016033)])
Epoch [29/30], Step [0/23], Loss: 0.4159, Perplexity: 1.5158
Epoch [29/30], Step [10/23], Loss: 0.3804, Perplexity: 1.4629
Epoch [29/30], Step [20/23], Loss: 0.4234, Perplexity: 1.5271
Epoch [29/30], Step [0/3]
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
tokenization...
setting up scorers...
computing Bleu score...
{'testlen': 18106, 'reflen': 10832, 'guess': [18106, 17741, 17376, 17011], 'correct': [3513, 1009, 280, 205]}
ratio: 1.6715288035448974
Bleu_1: 0.194
Bleu_2: 0.105
Bleu_3: 0.056
Bleu_4: 0.038
computing METEOR score...
METEOR: 0.117
computing Rouge score...
ROUGE_L: 0.194
computing CIDEr score...
CIDEr: 0.013
dict_items([('Bleu_1', 0.1940240804153212), ('Bleu_2', 0.10504716883064043), ('Bleu_3', 0.05623313669046769), ('Bleu_4', 0.038260464300999344), ('METEOR', 0.1166760859005659), ('ROUGE_L', 0.19371929015939357), ('CIDEr', 0.012770833154016033)])
